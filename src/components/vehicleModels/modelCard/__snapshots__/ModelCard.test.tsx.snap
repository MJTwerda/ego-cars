// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ModelCard should render 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <a
        class="group hover:scale-105 transition-transform duration-300"
        href="/model-sheet?id=12345"
      >
        <div
          class="flex flex-col items-center p-4"
        >
          <div
            class="flex flex-col items-center"
          >
            <h1
              class="text-2xl font-semibold group-hover:text-[--color-active] min-h-[56px] text-center"
            >
              Model 1
            </h1>
            <div
              class="flex space-x-2 text-gray-600"
            >
              <p>
                2022
              </p>
              <p>
                |
              </p>
              <p>
                $ 
                10.000
              </p>
            </div>
          </div>
          <div
            class="flex justify-center items-center w-full h-[200px]"
          >
            <img
              alt="Model 1"
              class="rounded object-contain"
              data-nimg="1"
              decoding="async"
              height="200"
              loading="lazy"
              src="/_next/image?url=%2Fimg1.jpg&w=640&q=75"
              srcset="/_next/image?url=%2Fimg1.jpg&w=384&q=75 1x, /_next/image?url=%2Fimg1.jpg&w=640&q=75 2x"
              style="color: transparent;"
              width="300"
            />
          </div>
          <button
            class="MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium MuiButton-colorPrimary MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium MuiButton-colorPrimary bg-black text-white px-4 py-2 rounded-3xl opacity-0 group-hover:opacity-100 transition-opacity duration-300 css-1uent87-MuiButtonBase-root-MuiButton-root"
            tabindex="0"
            type="button"
          >
            Ver Modelo
          </button>
        </div>
      </a>
    </div>
  </body>,
  "container": <div>
    <a
      class="group hover:scale-105 transition-transform duration-300"
      href="/model-sheet?id=12345"
    >
      <div
        class="flex flex-col items-center p-4"
      >
        <div
          class="flex flex-col items-center"
        >
          <h1
            class="text-2xl font-semibold group-hover:text-[--color-active] min-h-[56px] text-center"
          >
            Model 1
          </h1>
          <div
            class="flex space-x-2 text-gray-600"
          >
            <p>
              2022
            </p>
            <p>
              |
            </p>
            <p>
              $ 
              10.000
            </p>
          </div>
        </div>
        <div
          class="flex justify-center items-center w-full h-[200px]"
        >
          <img
            alt="Model 1"
            class="rounded object-contain"
            data-nimg="1"
            decoding="async"
            height="200"
            loading="lazy"
            src="/_next/image?url=%2Fimg1.jpg&w=640&q=75"
            srcset="/_next/image?url=%2Fimg1.jpg&w=384&q=75 1x, /_next/image?url=%2Fimg1.jpg&w=640&q=75 2x"
            style="color: transparent;"
            width="300"
          />
        </div>
        <button
          class="MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium MuiButton-colorPrimary MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium MuiButton-colorPrimary bg-black text-white px-4 py-2 rounded-3xl opacity-0 group-hover:opacity-100 transition-opacity duration-300 css-1uent87-MuiButtonBase-root-MuiButton-root"
          tabindex="0"
          type="button"
        >
          Ver Modelo
        </button>
      </div>
    </a>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
