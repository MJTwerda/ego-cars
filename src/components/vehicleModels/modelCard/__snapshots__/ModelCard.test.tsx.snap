// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ModelCard should render 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <a
        class="hover:scale-105 transition-transform"
        href="/model-sheet?id=12345"
      >
        <div
          class="flex flex-col items-center border p-4 rounded-lg shadow-lg"
        >
          <h1
            class="text-2xl font-semibold"
          >
            Model 1
          </h1>
          <div
            class="flex space-x-2 text-gray-600"
          >
            <p>
              2022
               |
            </p>
            <p>
              $ 
              10.000
            </p>
          </div>
          <img
            alt="Model 1"
            class="mt-2 rounded"
            data-nimg="1"
            decoding="async"
            height="200"
            loading="lazy"
            src="/_next/image?url=%2Fimg1.jpg&w=640&q=75"
            srcset="/_next/image?url=%2Fimg1.jpg&w=384&q=75 1x, /_next/image?url=%2Fimg1.jpg&w=640&q=75 2x"
            style="color: transparent;"
            width="300"
          />
        </div>
      </a>
    </div>
  </body>,
  "container": <div>
    <a
      class="hover:scale-105 transition-transform"
      href="/model-sheet?id=12345"
    >
      <div
        class="flex flex-col items-center border p-4 rounded-lg shadow-lg"
      >
        <h1
          class="text-2xl font-semibold"
        >
          Model 1
        </h1>
        <div
          class="flex space-x-2 text-gray-600"
        >
          <p>
            2022
             |
          </p>
          <p>
            $ 
            10.000
          </p>
        </div>
        <img
          alt="Model 1"
          class="mt-2 rounded"
          data-nimg="1"
          decoding="async"
          height="200"
          loading="lazy"
          src="/_next/image?url=%2Fimg1.jpg&w=640&q=75"
          srcset="/_next/image?url=%2Fimg1.jpg&w=384&q=75 1x, /_next/image?url=%2Fimg1.jpg&w=640&q=75 2x"
          style="color: transparent;"
          width="300"
        />
      </div>
    </a>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
